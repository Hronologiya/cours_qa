1. Создать внешний репозиторий c названием TXT.

           Переходим по ссылке https://github.com/ 
           Жмем зеленую кнопку "New" (Создаеться новый репозиторий) 
           Вводим название репозитория "TXT" 
           Жмем внизу страницы зеленую кнопку "Create repository"
       
2. Клонировать репозиторий TXT на локальный компьютер.

           Переходим на сай https://github.com 
           Выбираем с левой сторороны созданый репозиторий 
           Копируем ссылку на репозиторий
           Переходим в локальную папку на ПК
           Открываем терминал Git Bash
           В терминале вводим команду: git clone ссылка_репозиторий
          
3. Внутри локального TXT создать файл “new.txt”.

           В терминале вводим команду: touch new.txt
          
4. Добавить файл под гит.

           В терминале вводим команду: git add new.txt
          
5. Закоммитить файл.

           В терминале вводим команду: git commit -m "new commit"
          
6. Отправить файл на внешний GitHub репозиторий.

           В терминале вводим команду: git push
          
7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
Всё написать в формате TXT.

           В терминале вводим команду: vim new.txt
           Вводим свои данные после команиы: i
           
           1)Hanaha Yevhen
           2)32
           3)1
           4)1000$
           
           Сохранить данные: ESC + Enter ввести команду :wq
          
8. Отправить изменения на внешний репозиторий.

           В терминале вводим команду: git add . ; git commit -m "commit" ; git push
          
9. Создать файл preferences.txt

           В терминале вводим команду: touch preferences.txt
          
10. В файл preferences.txt” добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.

           В терминале вводим команду: vim preferences.txt
           Вводим свои данные после команиы: i
           
           1)Avatar
           2)Lost
           3)Vegetables
           4)Vinter
           5)Island
           
           Сохранить данные: ESC + Enter ввести команду :wq
           
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 
           В терминале вводим команду: cat > sklls.txt
           1)Функциональному и нефункциональному тестированию сайтов и приложений 
           2)Работать в таск-трекерах 
           3)Использовать шаблоны тест-планов, тест-кейсов, сценариев и чек-листов 	
           4)Тестированию мобильных приложений 
           5)Техникам тест-дизайна 
           6)Работе в панели инструментов веб-разработчика 
           7)Основным методам автоматизации 
           8)Основам программирования на Python 
           9)Тестированию пользовательских интерфейсов
           
 12. Сделать коммит в одну строку.
 
           В терминале вводим команду: git add . ; git commit -m " comment"
           
 13. Отправить сразу 2 файла на внешний репозиторий.
 
           В терминале вводим команду: git push
           
 14. На веб интерфейсе создать файл bug_report.txt.
 
           Переходим по ссылке https://github.com/ 
           Переходим в репозиторий (Your repositories)
           Нажать кнопку add file
           Нажать кнопку Create new file 
           В поле name your file ввести название файла bug_report.txt
           Сохранить фаил, нажать на зеленую кнопку "Commit new file"
          
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
           Открываем на веб интерфесе фаил bug_report.txt 
           Нажимаем кнопку редактировать (Карандаш Edit this File)
           В низу редактируемого файла делаем коммит (в поле Create new File ) затем жмем зеленную кнопку Commit new File.
 
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 
           ID :                  #1
           Summary:              При нажатии на кнопку "Зарегестрироваться" на глвной странице не открываеться форма регистрации.
           Project:              Основной сайт.
           Version:              (Операционная система Iphone) v14.7.1
           Severity:             S2
           Priority:             P2
           Status:               Открыт
           Author:               QA-tester
           Assigned To:      
           Steps to Reproduce:   1) Открыть главную страницу сайта.
                                 2) Попытаться нажать кнопку "Зарегестрироваться".
           Result:               Кнопка "Зарегестрироваться" неактивна.
           Expected Result:      Кнопка "Зарегестрироваться" нажимаеться, открываеться форма регестрации.
           
           В низу редактируемого файла делаем коммит (в поле Commit changes) затем жмем зеленную кнопку Commit changes.
           
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
           Открываем на веб интерфесе фаил bug_report.txt
           Внизу файла, под  Commit changes в активной строке ввести название нового коммита, затем применить изменения, нажать кнопку Commit Changes.
 
 18. Синхронизировать внешний и локальный репозиторий TXT
 
           В терминале вводим команду: git pull


----------------------------------------------------------------------------------------------------------------------------------------------------------------
 GIT Homework 1
 Для выполнения задания у вас должен быть установлен для Windows - GitBash.
 Создан аккаунт в GitHub

 Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


 Как отправить ДЗ на проверку.

           1. Создайте текстоовый файл как в первом ДЗ по Terminal.
           2. Сценарий перенесите в этот файл.
           3. На против каждого действия - напишите команду в GitBash

 Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

 JSON
 4. Создать внешний репозиторий c названием JSON.

           Переходим по ссылке https://github.com/ 
           Жмем зеленую кнопку "New" (Создаеться новый репозиторий) 
           Вводим название репозитория "JSON" 
           Жмем внизу страницы зеленую кнопку "Create repository"

 5. Клонировать репозиторий JSON на локальный компьютер. 
 
           Переходим на сай https://github.com 
           Выбираем с левой сторороны созданый репозиторий 
           Копируем ссылку на репозиторий
           Переходим в локальную папку на ПК
           Открываем терминал Git Bash
           В терминале вводим команду: git clone ссылка_репозиторий
          
 6. Внутри локального JSON создать файл “new.json”.
 
           В терминале вводим команду: touch new.json
          
 7. Добавить файл под гит.
 
           В терминале вводим команду: git add new.json
          
 8. Закоммитить файл.
 
           В терминале вводим команду: git commit -m "название коммита" new.json
          
 9. Отправить файл на внешний GitHub репозиторий.
 
           В терминале вводим команду: git push
          
 10. Отредактировать содержание файла “new.json” - написать информацию о себе 
 (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 
           В терминале вводим команду: vim new.json
           Вводим свои данные после команиы: i
          
           {
            "name":"Hanaha_Yevhen",
            "How_many_years":32,
            "how_many_pets":1,
            "amount_of_monay":"1000$"
           }
          
           Сохранить данные: ESC + Enter ввести команду :wq
          
 11. Отправить изменения на внешний репозиторий.
 
          В терминале вводим команду: gitt add . ; git commit -m "текст коммита" ; git push
          
 12. Создать файл preferences.json
 
           В терминале вводим команду: touch preferences.json
          
 13. В файл preferences.json добавить информацию о своих предпочтениях 
 (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
          
           В терминале вводим команду: vim preferences.json
           Вводим свои данные после команиы: i 
           
           {
            "favorite_movie":"Avatar",
            "favorite_series":"Lost",
            "favorite_food":"Vegetables",
            "favorite_season":"Vinter",
            "country_to_visit":"Island"
           }
          
           Сохранить данные: ESC + Enter ввести команду :wq 
          
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 
           В терминале вводим команду: touch sklls.json
           В терминале вводим команду: vim sklls.json
           Вводим свои данные после команиы: i
          
           {
           "education":{"One":"Функциональному и нефункциональному тестированию сайтов и приложений",
            "two":"Работать в таск-трекерах",
            "three":"Использовать шаблоны тест-планов, тест-кейсов, сценариев и чек-листов",
            "four":"Тестированию мобильных приложений",
            "five":"Техникам тест-дизайна",
            "six":"Работе в панели инструментов веб-разработчика",
            "seven":"Основным методам автоматизации",
            "eight":"Основам программирования на Python",
            "nine":"Тестированию пользовательских интерфейсов"}
            }
           
           Сохранить данные: ESC + Enter ввести команду :wq
          
 15. Отправить сразу 2 файла на внешний репозиторий.
 
           В терминале вводим команду: gitt add . ; git commit -m "текст коммита" ; git push
          
 16. На веб интерфейсе создать файл bug_report.json.
          
           Переходим по ссылке https://github.com/ 
           Переходим в репозиторий (Your repositories)
           Нажать кнопку add file
           Нажать кнопку Create new file 
           В поле name your file ввести название файла bug_report.json
           Сохранить фаил, нажать на зеленую кнопку "Commit new file"

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
           Открываем bug_report.json 
           Нажимаем кнопку редактировать (Карандаш Edit this File)
           В низу редактируемого файла делаем коммит (в поле Create new File ) затем жмем зеленную кнопку Commit new File.
 
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
  
           Открываем на веб интерфесе фаил bug_report.json 
           Нажимаем кнопку редактировать (Карандаш Edit this File)
          
           {
            "ID":"#1",
            "Summary":"При нажатии на кнопку (Зарегестрироваться) на глвной странице не открываеться форма регистрации.",
            "Project":"Основной сайт.",
            "Version":"(Операционная система Iphone) v14.7.1",
            "Severity":"S2",
            "Priority":"P2",
            "Status":"Открыт",
            "Author":"QA-tester",
            "Assigned_To":"Назначен на",
            "Steps_to_Reproduce":{"1":"Открыть главную страницу сайта.",
                                  "2":"Попытаться нажать кнопку (Зарегестрироваться)"
            },
            "Result":"Кнопка (Зарегестрироваться) неактивна.",
            "Expected_Result":"Кнопка (Зарегестрироваться) нажимаеться, открываеться форма регестрации."
           } 
          
           Внизу редактируемого файла делаем коммит (в поле Commit changes) затем жмем зеленную кнопку Commit changes.
          
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
            
           Открываем на веб интерфесе фаил bug_report.json 
           Внизу файла, под  Commit changes в активной строке ввести название нового коммита, затем применить изменения, нажать кнопку Commit Changes.
          
 20. Синхронизировать внешний и локальный репозиторий JSON
 
           В терминале вводим команду:  git pull


-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 XML
 21. Создать внешний репозиторий c названием XML.

           Переходим по ссылке https://github.com/ 
           Жмем зеленую кнопку "New" (Создаеться новый репозиторий) 
           Вводим название репозитория "XML" 
           Жмем внизу страницы зеленую кнопку "Create repository"

 22. Клонировать репозиторий XML на локальный компьютер.
 
           Переходим на сай https://github.com 
           Выбираем с левой сторороны созданый репозиторий 
           Копируем ссылку на репозиторий
           Переходим в локальную папку на ПК
           Открываем терминал Git Bash
           В терминале вводим команду: git clone ссылка_репозиторий
          
 23. Внутри локального XML создать файл “new.xml”.
 
           В терминале вводим команду: touch new.xml
          
 24. Добавить файл под гит.
 
           В терминале вводим команду: git add название_файла
           
 25. Закоммитить файл.
 
           В терминале вводим команду: git commit -m "коммит" new.xml
           
 26. Отправить файл на внешний GitHub репозиторий.
 
           В терминале вводим команду: git push
           
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). 
 Всё написать в формате XML.
 
            В терминале вводим команду: vim new.xml
            Вводим свои данные после команиы: i
            
            <?xml version="1.0" encoding="UTF-8"?>
            <CAT>
             <NAME>Hanaha Yevhen</NAME>
             <How_many_years>32</How_many_years>
             <PETS>1</PETS>
             <MONEY>1000$</MONEY>
            </CAT>
            
            Сохранить данные: ESC + Enter ввести команду :wq

 28. Отправить изменения на внешний репозиторий.
 
            В терминале вводим команду: git add . ; git commit -m "название_коммита" ; git push
           
 29. Создать файл preferences.xml
 
            В терминале вводим команду: touch preferences.xml
            
 30. В файл preferences.xml добавить информацию о своих предпочтениях 
 (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 
            В терминале вводим команду: vim preferences.xml
            Вводим свои данные после команиы: i
            
            <?xml version="1.0" encoding="UTF-8"?>
            <CAT>
             <favorite_movie>Avatar</favorite_movie>
             <favorite_series>Lost</favorite_series>
             <favorite_food>Vegetables</favorite_food>
             <favorite_season>Vinte</favorite_season>
             <country_to_visit>Island</country_to_visit>
            </CAT>
             
            Cохранить данные: ESC + Enter ввести команду :wq
 
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 
            В терминале вводим команду: touch sklls.xml 
            
 32. Сделать коммит в одну строку.
 
            В терминале вводим команду: git add . ; git commit -m "название_коммита" 
            
 33. Отправить сразу 2 файла на внешний репозиторий.
 
            В терминале вводим команду: git push
            
 34. На веб интерфейсе создать файл bug_report.xml.
 
            Открываем на веб интерфесе фаил bug_report.xml 
            Нажимаем кнопку редактировать (Карандаш Edit this File)
            В низу редактируемого файла делаем коммит (в поле Create new File ) затем жмем зеленную кнопку Commit new File.
            
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
            Внизу файла, под  Commit changes в активной строке ввести название нового коммита, затем применить изменения, нажать кнопку Commit Changes.
 
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 
            Открываем на веб интерфесе фаил bug_report.xml 
            Нажимаем кнопку редактировать (Карандаш Edit this File)
            
            <?xml version="1.0" encoding="UTF-8"?>
            <html>
            <head>
            </head>
            <body>
             <id>Короткое описание</id>
             <Summary>При нажатии на кнопку (Зарегестрироваться) на глвной странице не открываеться форма регистрации.</Summary>
             <Project>Основной сайт.</Project>
             <Version>(Операционная система Iphone) v14.7.1</Version>
             <Severity>S2</Severity>
             <Priority>P2</Priority>
             <Status>Открыт</Status>
             <Author>QA-tester</Author>
             <Assigned_To>Назначен на</Assigned_To>
             <Steps_to_Reproduce>
             1)Открыть главную страницу сайта. 
             2)Попытаться нажать кнопку (Зарегестрироваться).
             </Steps_to_Reproduce>
             <Result>Кнопка (Зарегестрироваться) неактивна.</Result>
             <Expected_Result>Кнопка (Зарегестрироваться) нажимаеться, открываеться форма регестрации.</Expected_Result>
            </body>
            </html>
            
            Внизу редактируемого файла делаем коммит (в поле Commit changes) затем жмем зеленную кнопку Commit changes.
            
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
            Открываем на веб интерфесе фаил bug_report.xml 
            Внизу файла, под  Commit changes в активной строке ввести название нового коммита, затем применить изменения, нажать кнопку Commit Changes.
 
 38. Синхронизировать внешний и локальный репозиторий XML
            В терминале вводим команду: git pull
